{
  // Place your snippets for JavaScript React here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  "Enzyme shallow rendering test": {
    "prefix": "shallow",
    "body": [
      "//Note: npm install implicit devdependency react-rest-renderer",
      "import React from 'react';",
      "import { expect } from 'chai';",
      "import { shallow } from 'enzyme';",
      "import sinon from 'sinon';",
      "",
      "import $1 from './$1';",
      "import $2 from './$2';",
      "",
      "describe('<$1 />', () => {",
      "let wrapper ",
      "beforeEach(() => {",
      "    const LOADING_PROPS = {",
      "        imgSrc: 'https://media.giphy.com/media/feN0YJbVs0fwA/giphy.gif'",
      "    };",
      "    const wrapper = shallow(<$1 {...LOADING_PROPS} />);",
      "});",
      "  it('renders one $0 <$2 /> components', () => {",
      "    expect(wrapper.find($2)).to.have.length(1);",
      "  });",
      "",
      "  it('renders an `.icon-star`', () => {",
      "    expect(wrapper.find('.icon-star')).to.have.length(1);",
      "  });",
      "",
      "  it('renders children when passed in', () => {",
      "    const wrapper = shallow((",
      "      <$1>",
      "        <div className=\"unique\" />",
      "      </$1>",
      "    ));",
      "    expect(wrapper.contains(<div className=\"unique\" />)).to.equal(true);",
      "  });",
      "",
      "  it('simulates click events', () => {",
      "    const onButtonClickSpy = sinon.spy();",
      "    const wrapper = shallow(<$2 onButtonClick={onButtonClickSpy} />);",
      "    wrapper.find('button').simulate('click');",
      "    expect(onButtonClickSpy).to.have.property('callCount', 1);",
      "    onButtonClickSpy.restore",
      "  });",
      "});"
    ],
    "description": "Enzyme shallow rendering test"
  },

  "it shallow test": {
    "prefix": "it renders",
    "body": [
      "import $1 from '/component/$1'",
      "it('should render one <$1 /> component', () => {",
      "const wrapper = shallow(<$2 />);",
      "expect(wrapper.find($1)).to.have.length(1);",
      "});"
    ],
    "description": "it renders test"
  },
  
  "describe RDD":{
	"prefix": "describe brainstorming",
	"body": [
		"describe('rendering,() => {",
			"it('should render a $1')",
			"it('should render a label')",
			"describe('no type', () => {",
				"it('should have the default style')",
			"});",
		"});",
		"",
		"describe('interaction', () => {",
			"describe('clicking the button', () => {",
				"it('should call the onClick callback')",
			"});",
		"});"
	],
	"description": "describe brainstorming"
  }

}
